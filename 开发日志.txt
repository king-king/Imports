17:14 2015/6/19
下午突然意识到，imports的路径可以不必采用相对于html的路径，而是采用引用-被引用二者之间的相对路径。

例如有这样的引用关系：index.html-->a.js-->b.js
文件之间的层次关系如下：\view\index.html
                     \script\a.js
                            \b.js
那么在index.html中引用a.js应该这么写：imports("../script/a.js"),在a.js中引用b.js则应该这么写
imports("a.js")


17:38 2015/6/19
书接上文，如果要做到写引用之间的相对路径即可正常使用，则需要有一个路径的追踪，会更加复杂一些。


9:30 2015/6/23
想到一些新问题
路径，只写文件名字的，写相对路径
合并文件怎么办？做什么特殊处理吗？


10:11 2015/6/23
后期必须考虑兼容问题，比如引用了jquery库，怎么兼容？


14:56 2015/6/23
已经可以用js间的相对路径来引用模块、执行模块，接下来需要考虑如何实现暴露接口的问题。
比如：
var util=imports("lib/util.js");
在util.js中到处一些接口如
export.loopArray=loopArray;
export.loop=loop;
……
怎么能够在util中得到loopArray和loop这类的接口？


10:25 2015/6/24
接下来需要考虑脚本合并的问题，主要还是导出接口。


13:47 2015/6/24
还是在合并这里遇到了难题，不知道怎么把接口暴露出来，不知道怎么弄imports，搞不好要自己写一个驱动，在代码中插入自己库的代码。


15:04 2015/6/24
原来没用过eval函数，刚才写的时候用到了，感觉很好。eval实际上可以解决一个很重要的问题，动态赋予一个函数作用域。一般来说一个函数的作用域取决于在哪定义，不取决于在哪里调用。但有时候希望采用调用处的作用域，这时候eval就很有用处了。eval的这点能不能被替代，我还没想清楚。














